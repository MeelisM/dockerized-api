services:
  inventory-db:
    build:
      context: . 
      dockerfile: Dockerfile.inventory-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${INVENTORY_DB_USER}
      POSTGRES_PASSWORD: ${INVENTORY_DB_PASSWORD}
      POSTGRES_DB: ${INVENTORY_DB_NAME}
    container_name: inventory-db
    volumes:
      - inventory-db-volume:/var/lib/postgresql/data
    ports:
      - "${INVENTORY_DB_PORT}:5432"
    networks:
      - app-network 
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${INVENTORY_DB_USER}", "-d", "${INVENTORY_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    

  inventory-app:
    build:
      context: .
      dockerfile: Dockerfile.inventory-app
    env_file:
      - .env
    environment:
      INVENTORY_DB_HOST: ${INVENTORY_DB_HOST}
      INVENTORY_DB_PORT: ${INVENTORY_DB_PORT}
      INVENTORY_DB_NAME: ${INVENTORY_DB_NAME}
      INVENTORY_DB_USER: ${INVENTORY_DB_USER}
      INVENTORY_DB_PASSWORD: ${INVENTORY_DB_PASSWORD}
      INVENTORY_PORT: ${INVENTORY_PORT}
      INVENTORY_HOST: ${INVENTORY_HOST}
    container_name: inventory-app
    depends_on:
      inventory-db:
        condition: service_healthy
    ports:
      - 8080:8080
    networks:
      - app-network
    restart: always
networks:
  app-network:
    driver: bridge
volumes:
  inventory-db-volume: